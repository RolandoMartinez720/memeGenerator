{"ast":null,"code":"var _jsxFileName = \"/home/rolando/meme-generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport memesData from '../memesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  // const [allMemeImages, setAllMemeImages]=React.useState(memesData) changed var = from this state value on line 16 'dont think its needed'\n  const [meme, setMeme] = React.useState({\n    topText: '',\n    bottomText: '',\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n\n  function setText(event) {\n    let {\n      name,\n      value,\n      id\n    } = event.target;\n    setMeme(prev => ({ ...prev\n    }));\n  }\n\n  function getMemeImage() {\n    let memesArray = memesData.data.memes;\n    let randImg = Math.floor(Math.random() * memesArray.length);\n    let url = memesArray[randImg].url;\n    console.log(memesData.data.memes[randImg].name, randImg);\n    setMeme(prev => ({ ...prev,\n      randomImage: url\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme--container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: setText,\n        name: \"topText\",\n        className: \"top-text\",\n        type: \"text\",\n        placeholder: \"Top Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: setText,\n        name: \"bottomText\",\n        className: \"bottom-text\",\n        type: \"text\",\n        placeholder: \"Bottom Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        type: \"button\",\n        className: \"meme--button\",\n        children: \"Get New Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: meme.randomImage,\n      className: \"meme--image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"5giDz9mHicPpKMr1QqRbmuHOOvo=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","Meme","meme","setMeme","useState","topText","bottomText","randomImage","setText","event","name","value","id","target","prev","getMemeImage","memesArray","data","memes","randImg","Math","floor","random","length","url","console","log"],"sources":["/home/rolando/meme-generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\"\nimport memesData from '../memesData'\n\nexport default function Meme(){\n\n    // const [allMemeImages, setAllMemeImages]=React.useState(memesData) changed var = from this state value on line 16 'dont think its needed'\n\n    const [meme, setMeme]= React.useState({\n        topText:'',\n        bottomText:'',\n        randomImage:\"http://i.imgflip.com/1bij.jpg\"\n    })\n\n    function setText(event){\n       let {name,value,id}=event.target;\n        setMeme((prev)=>(\n            {\n                ...prev,\n                \n            }\n        ))\n    }\n\n    function getMemeImage(){\n    \n    let memesArray= memesData.data.memes;\n    let randImg=Math.floor(Math.random()*memesArray.length);\n    let url=memesArray[randImg].url;\n    console.log(memesData.data.memes[randImg].name , randImg);\n    setMeme((prev)=>({\n        ...prev,\n        randomImage:url,\n    }))\n\n\n    }\n \n  \n    return(\n        <main>\n            <div className=\"meme--container\">\n            \n                    <input onChange={setText} name='topText' className=\"top-text\" type=\"text\" placeholder=\"Top Text\"/>\n                    <input onChange={setText} name='bottomText' className=\"bottom-text\" type=\"text\" placeholder=\"Bottom Text\"/>\n                    <button onClick={getMemeImage} type='button' className='meme--button'>Get New Image</button>\n            \n            </div>\n           <img src={meme.randomImage}className='meme--image' />\n           <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2  className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,eAAe,SAASC,IAAT,GAAe;EAAA;;EAE1B;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBJ,KAAK,CAACK,QAAN,CAAe;IAClCC,OAAO,EAAC,EAD0B;IAElCC,UAAU,EAAC,EAFuB;IAGlCC,WAAW,EAAC;EAHsB,CAAf,CAAvB;;EAMA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;IACpB,IAAI;MAACC,IAAD;MAAMC,KAAN;MAAYC;IAAZ,IAAgBH,KAAK,CAACI,MAA1B;IACCV,OAAO,CAAEW,IAAD,KACJ,EACI,GAAGA;IADP,CADI,CAAD,CAAP;EAMH;;EAED,SAASC,YAAT,GAAuB;IAEvB,IAAIC,UAAU,GAAEhB,SAAS,CAACiB,IAAV,CAAeC,KAA/B;IACA,IAAIC,OAAO,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcN,UAAU,CAACO,MAApC,CAAZ;IACA,IAAIC,GAAG,GAACR,UAAU,CAACG,OAAD,CAAV,CAAoBK,GAA5B;IACAC,OAAO,CAACC,GAAR,CAAY1B,SAAS,CAACiB,IAAV,CAAeC,KAAf,CAAqBC,OAArB,EAA8BT,IAA1C,EAAiDS,OAAjD;IACAhB,OAAO,CAAEW,IAAD,KAAS,EACb,GAAGA,IADU;MAEbP,WAAW,EAACiB;IAFC,CAAT,CAAD,CAAP;EAMC;;EAGD,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,iBAAf;MAAA,wBAEQ;QAAO,QAAQ,EAAEhB,OAAjB;QAA0B,IAAI,EAAC,SAA/B;QAAyC,SAAS,EAAC,UAAnD;QAA8D,IAAI,EAAC,MAAnE;QAA0E,WAAW,EAAC;MAAtF;QAAA;QAAA;QAAA;MAAA,QAFR,eAGQ;QAAO,QAAQ,EAAEA,OAAjB;QAA0B,IAAI,EAAC,YAA/B;QAA4C,SAAS,EAAC,aAAtD;QAAoE,IAAI,EAAC,MAAzE;QAAgF,WAAW,EAAC;MAA5F;QAAA;QAAA;QAAA;MAAA,QAHR,eAIQ;QAAQ,OAAO,EAAEO,YAAjB;QAA+B,IAAI,EAAC,QAApC;QAA6C,SAAS,EAAC,cAAvD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJR;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAQG;MAAK,GAAG,EAAEb,IAAI,CAACK,WAAf;MAA2B,SAAS,EAAC;IAArC;MAAA;MAAA;MAAA;IAAA,QARH,eASG;MAAK,SAAS,EAAC,MAAf;MAAA,wBACK;QAAK,GAAG,EAAEL,IAAI,CAACK,WAAf;QAA4B,SAAS,EAAC;MAAtC;QAAA;QAAA;QAAA;MAAA,QADL,eAEK;QAAI,SAAS,EAAC,gBAAd;QAAA,UAAgCL,IAAI,CAACG;MAArC;QAAA;QAAA;QAAA;MAAA,QAFL,eAGK;QAAK,SAAS,EAAC,mBAAf;QAAA,UAAoCH,IAAI,CAACI;MAAzC;QAAA;QAAA;QAAA;MAAA,QAHL;IAAA;MAAA;MAAA;MAAA;IAAA,QATH;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GApDuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}